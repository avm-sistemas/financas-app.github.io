var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1,1,1.215]],["body/controllers/AppController.html",[0,0.868,1,1.482,2,1.054,3,0.868,4,0.868,5,0.712,6,1.6,7,1.6,8,2.074,9,0.712,10,2.25,11,2.602,12,2.602,13,0.58,14,1.482,15,1.714,16,2.824,17,1.6,18,0.077,19,1.054,20,2.074,21,2.917,22,2.917,23,2.824,24,1.482,25,2.824,26,2.917,27,1.482,28,1.81,29,2.25,30,2.25,31,2.25,32,1.531,33,0.712,34,1.325,35,1.6,36,1.6,37,1.287,38,1.6,39,1.6,40,2.074,41,2.074,42,0.868,43,0.712,44,1.287,45,1.002,46,1.287,47,0.58,48,2.074,49,1.287,50,2.074,51,1.6,52,1.054,53,2.074,54,0.047,55,0.047]],["title/modules/AppModule.html",[56,1.484,57,1.215]],["body/modules/AppModule.html",[1,1.671,2,1.434,3,0.828,4,0.828,5,0.68,9,0.68,12,2.177,18,0.077,32,1.765,33,0.68,34,1.354,35,1.527,42,0.828,43,0.68,47,0.789,54,0.046,55,0.046,56,2.041,57,2.107,58,1.229,59,1.006,60,1.527,61,1.527,62,1.006,63,2.537,64,1.527,65,1.527,66,1.527,67,1.354,68,2.177,69,1.527,70,1.527,71,1.98,72,2.822,73,2.822,74,2.822,75,1.671,76,1.98,77,1.98,78,1.527,79,1.229,80,1.229,81,1.98,82,1.98,83,1.527,84,1.98,85,1.527,86,1.98,87,1.527,88,1.98,89,1.98,90,1.98,91,1.752,92,1.527,93,1.98,94,1.98,95,1.527,96,1.98,97,1.98,98,1.98,99,1.98]],["title/injectables/AppService.html",[34,0.821,100,1]],["body/injectables/AppService.html",[3,0.995,4,0.995,5,0.817,9,0.817,11,2.473,13,0.665,14,1.629,15,1.843,16,2.993,18,0.075,19,1.209,23,2.473,24,1.972,25,2.473,27,1.629,28,1.99,29,2.473,30,2.473,31,2.473,32,0.995,33,0.817,34,1.101,42,0.995,43,0.817,45,1.101,52,1.209,54,0.052,55,0.052,91,1.477,100,1.341,101,1.477,102,1.835,103,2.993,104,2.38,105,2.473,106,3.207,107,2.473,108,3.207,109,3.207,110,3.207,111,2.38]],["title/controllers/ConsolidadoController.html",[0,1,75,1.215]],["body/controllers/ConsolidadoController.html",[0,0.51,2,0.62,3,0.51,4,0.51,5,0.419,7,0.941,9,0.961,10,1.507,13,0.341,14,0.993,15,1.868,17,1.886,18,0.076,19,1.242,27,1.659,28,2.027,32,1.28,33,0.419,36,0.941,37,0.757,38,0.941,39,0.941,42,0.51,43,0.419,44,1.213,45,0.419,46,0.757,47,1.155,49,1.899,51,0.941,52,1.242,54,0.032,55,0.032,67,0.84,75,0.993,87,0.941,103,2.157,112,0.941,113,1.22,114,0.993,115,1.507,116,1.507,117,1.507,118,0.941,119,3.676,120,1.954,121,1.22,122,2.518,123,2.518,124,2.518,125,2.518,126,2.027,127,2.518,128,2.157,129,2.749,130,1.886,131,1.886,132,1.242,133,1.886,134,2.518,135,3.265,136,3.265,137,0.941,138,1.954,139,1.22,140,1.507,141,1.507,142,0.941,143,1.954,144,1.22,145,1.213,146,1.507,147,1.213,148,2.157,149,1.886,150,1.954,151,1.22,152,1.22,153,1.22,154,1.22,155,1.22,156,0.941,157,0.941,158,1.22,159,0.941,160,1.22,161,1.22,162,2.445,163,3.265,164,2.445,165,1.22,166,1.22,167,1.22,168,1.22,169,1.22]],["title/injectables/ConsolidadoService.html",[67,0.821,100,1]],["body/injectables/ConsolidadoService.html",[3,0.575,4,0.575,5,0.472,9,0.472,13,0.384,14,1.091,15,1.889,18,0.077,19,1.519,27,1.648,32,0.898,33,0.472,42,0.575,43,0.472,44,1.855,45,0.738,46,1.333,47,1.004,49,1.64,52,0.698,54,0.035,55,0.035,67,0.738,100,0.898,101,0.853,114,1.091,115,1.656,116,1.656,117,1.656,118,1.656,122,2.501,123,2.501,124,2.501,125,2.501,126,2.012,127,2.501,128,2.305,129,2.305,130,2.305,131,2.305,132,1.519,133,2.305,134,2.651,137,1.656,140,1.656,141,1.656,142,1.059,145,0.853,146,1.059,147,0.853,148,1.059,149,1.059,156,1.656,157,1.656,159,1.059,170,1.059,171,1.374,172,3.717,173,1.374,174,3.717,175,1.374,176,2.501,177,2.643,178,1.374,179,1.374,180,1.059,181,1.059,182,1.059,183,2.147,184,2.147,185,2.643,186,2.147,187,2.147,188,2.147,189,2.147,190,2.147,191,1.374,192,1.374,193,1.374]],["title/coverage.html",[194,2.481]],["body/coverage.html",[0,1.471,1,1.391,5,0.94,6,2.111,18,0.074,34,0.94,54,0.057,55,0.057,62,1.391,67,0.94,75,1.391,79,1.699,80,1.699,100,1.471,102,2.111,112,2.111,132,1.391,170,2.111,194,2.111,195,2.737,196,2.737,197,2.737,198,4.412,199,3.516,200,2.712,201,3.516,202,3.884,203,2.737,204,2.737,205,2.111,206,2.737,207,2.737,208,2.737,209,2.737]],["title/dependencies.html",[59,1.455,210,1.558]],["body/dependencies.html",[18,0.077,33,0.769,37,1.389,43,1.057,54,0.05,55,0.05,59,1.137,78,1.726,83,1.726,85,1.726,92,1.726,180,1.726,211,3.514,212,2.238,213,2.238,214,2.238,215,2.238,216,3.076,217,2.238,218,3.076,219,2.238,220,2.238,221,2.238,222,2.238,223,2.238,224,2.238,225,2.238,226,2.238,227,2.238,228,2.238,229,2.238,230,2.238,231,2.238,232,2.238,233,2.238,234,2.238,235,2.238,236,2.238,237,2.238,238,1.726,239,2.238,240,2.238,241,2.238,242,3.783,243,2.238,244,2.238,245,2.238,246,2.238,247,1.726,248,2.238,249,2.238,250,2.238,251,2.238,252,2.238,253,2.238,254,2.238,255,2.238,256,2.238,257,2.238,258,2.238,259,2.238,260,2.238,261,2.238,262,2.238,263,2.238]],["title/miscellaneous/functions.html",[264,1.027,265,2.209]],["body/miscellaneous/functions.html",[13,0.943,18,0.065,45,1.159,47,0.943,54,0.065,55,0.065,62,2.167,105,2.602,205,2.602,264,1.714,265,2.602,266,3.374,267,3.374]],["title/index.html",[13,0.565,268,2.02,269,2.02]],["body/index.html",[18,0.074,24,1.962,45,0.807,47,0.888,54,0.052,55,0.052,107,1.813,114,1.962,126,1.973,145,1.459,147,1.459,176,1.813,238,2.779,270,2.35,271,2.35,272,2.35,273,2.35,274,2.35,275,2.35,276,2.35,277,2.35,278,2.35,279,2.35,280,2.35,281,2.35,282,2.35,283,2.35,284,3.179,285,3.179,286,2.35,287,2.35,288,2.35,289,2.35,290,2.35,291,2.35,292,2.35,293,2.35,294,2.35,295,2.35,296,2.35,297,3.179,298,2.35,299,2.35,300,3.603,301,3.179,302,2.35,303,2.35,304,2.35,305,2.35,306,2.35,307,2.35,308,2.35,309,2.35,310,2.35,311,2.35,312,2.35,313,1.813,314,2.35,315,2.35,316,1.813,317,2.35]],["title/modules.html",[58,1.997]],["body/modules.html",[18,0.067,54,0.067,55,0.067,57,1.778,58,2.172,318,3.499,319,3.499,320,3.499,321,3.499]],["title/overview.html",[322,2.481]],["body/overview.html",[2,1.515,18,0.069,34,1.388,54,0.06,55,0.06,56,2.304,57,2.254,59,1.515,60,2.3,61,2.3,62,1.515,63,2.3,64,2.3,65,2.3,66,2.3,67,1.388,68,2.863,69,2.3,70,2.3,101,1.851,322,2.3,323,2.982,324,3.712]],["title/properties.html",[210,1.558,325,2.209]],["body/properties.html",[9,1.139,18,0.074,24,1.684,54,0.064,55,0.064,114,1.684,313,2.556,316,2.556,325,2.556,326,3.315,327,3.315,328,3.315,329,3.315,330,3.315]],["title/miscellaneous/variables.html",[264,1.027,331,2.209]],["body/miscellaneous/variables.html",[13,0.685,18,0.076,47,1.029,54,0.053,55,0.053,79,2.03,80,2.03,91,2.438,95,1.891,132,1.871,181,1.891,182,1.891,200,1.891,247,1.891,264,1.246,331,1.891,332,3.271,333,2.452,334,3.271,335,3.271,336,2.452,337,3.271,338,2.452,339,2.452,340,2.452,341,2.452,342,2.452,343,2.452,344,2.452,345,2.452,346,2.452,347,2.452,348,2.452,349,2.452,350,2.452,351,2.452,352,2.452,353,2.452,354,2.452,355,2.452,356,3.682,357,2.452,358,2.452,359,2.452,360,2.452,361,2.452,362,2.452]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":323,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":327,"title":{},"body":{"properties.html":{}}}],["1.0.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["1.6.6",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["10.1.2",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["16.10.16",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":324,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":317,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["4.0.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["7.1.2",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":134,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["acesso",{"_index":181,"title":{},"body":{"injectables/ConsolidadoService.html":{},"miscellaneous/variables.html":{}}}],["andre",{"_index":329,"title":{},"body":{"properties.html":{}}}],["api",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{},"properties.html":{}}}],["apibearerauth",{"_index":150,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["apiextramodels",{"_index":151,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["apitags",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["apitags('consolidated",{"_index":154,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["apitags('health",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["atual",{"_index":141,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["author",{"_index":328,"title":{},"body":{"properties.html":{}}}],["await",{"_index":164,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["banco",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["biblioteca",{"_index":288,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":321,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":318,"title":{},"body":{"modules.html":{}}}],["básico",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["cache",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["carga",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["cd",{"_index":303,"title":{},"body":{"index.html":{}}}],["central",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["class",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cod_account_id",{"_index":190,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["cod_entry_type",{"_index":185,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["com",{"_index":279,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":289,"title":{},"body":{"index.html":{}}}],["compodocconfiguração",{"_index":302,"title":{},"body":{"index.html":{}}}],["concebido",{"_index":277,"title":{},"body":{"index.html":{}}}],["config/typeorm.config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["configuração",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidado",{"_index":114,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"index.html":{},"properties.html":{}}}],["consolidado.controller",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["consolidado.service",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/ConsolidadoController.html":{}}}],["consolidadocontroller",{"_index":75,"title":{"controllers/ConsolidadoController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ConsolidadoController.html":{},"coverage.html":{}}}],["consolidadoservice",{"_index":67,"title":{"injectables/ConsolidadoService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{},"overview.html":{}}}],["consolidated",{"_index":113,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["consolidação",{"_index":158,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["const",{"_index":162,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["constante",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["constructor(datasource",{"_index":171,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["conta",{"_index":129,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["contas",{"_index":146,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["controlador",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{},"coverage.html":{}}}],["controller('consolidated",{"_index":155,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["controller('health",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ConsolidadoController.html":{},"overview.html":{}}}],["copy",{"_index":305,"title":{},"body":{"index.html":{}}}],["correctamente",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["coverage",{"_index":194,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credito",{"_index":125,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["código",{"_index":285,"title":{},"body":{"index.html":{}}}],["da",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{}}}],["dados",{"_index":182,"title":{},"body":{"injectables/ConsolidadoService.html":{},"miscellaneous/variables.html":{}}}],["das",{"_index":145,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"index.html":{}}}],["dat_date",{"_index":193,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["data",{"_index":140,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["database",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":172,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["de",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debito",{"_index":127,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["debug",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["default",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["definição",{"_index":270,"title":{},"body":{"index.html":{}}}],["dependencia",{"_index":156,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependência",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"properties.html":{}}}],["destinado",{"_index":272,"title":{},"body":{"index.html":{}}}],["deve",{"_index":290,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":284,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":126,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"index.html":{}}}],["em",{"_index":176,"title":{},"body":{"injectables/ConsolidadoService.html":{},"index.html":{}}}],["entities",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity.{js,ts",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":307,"title":{},"body":{"index.html":{}}}],["env.sample",{"_index":306,"title":{},"body":{"index.html":{}}}],["escalar",{"_index":283,"title":{},"body":{"index.html":{}}}],["este",{"_index":310,"title":{},"body":{"index.html":{}}}],["estiver",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["example",{"_index":300,"title":{},"body":{"index.html":{}}}],["executada",{"_index":292,"title":{},"body":{"index.html":{}}}],["executar",{"_index":298,"title":{},"body":{"index.html":{}}}],["execução",{"_index":308,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["exports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{}}}],["finanças",{"_index":274,"title":{},"body":{"index.html":{}}}],["foi",{"_index":276,"title":{},"body":{"index.html":{}}}],["forma",{"_index":281,"title":{},"body":{"index.html":{}}}],["funcionamento",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["funcionar",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["function",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":265,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["função",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["general",{"_index":314,"title":{},"body":{"index.html":{}}}],["gerada",{"_index":286,"title":{},"body":{"index.html":{}}}],["get('getaccountbalance/:accountid",{"_index":120,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["get('getaccountbalancetoday/:accountid",{"_index":138,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["get('getuseraccountsbalance/:userid",{"_index":143,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["getaccountbalance",{"_index":115,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["getaccountbalance(@param('accountid",{"_index":161,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["getaccountbalance(accountid",{"_index":118,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["getaccountbalancetoday",{"_index":116,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["getaccountbalancetoday(@param('accountid",{"_index":166,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["getaccountbalancetoday(accountid",{"_index":137,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["gethealth",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":268,"title":{"index.html":{}},"body":{}}],["getuseraccountsbalance",{"_index":117,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["getuseraccountsbalance(@param('userid",{"_index":168,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["getuseraccountsbalance(userid",{"_index":142,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["gnu",{"_index":313,"title":{},"body":{"index.html":{},"properties.html":{}}}],["google",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["gratuito",{"_index":311,"title":{},"body":{"index.html":{}}}],["group",{"_index":191,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["health",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["host",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["houver",{"_index":295,"title":{},"body":{"index.html":{}}}],["identificador",{"_index":135,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["identifier",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AppService.html":{},"injectables/ConsolidadoService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsolidadoService.html":{},"overview.html":{}}}],["injeção",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["insecureauth",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":304,"title":{},"body":{"index.html":{}}}],["início",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isglobal",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":247,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["legend",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":316,"title":{},"body":{"index.html":{},"properties.html":{}}}],["livre",{"_index":312,"title":{},"body":{"index.html":{}}}],["local",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["lodash",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["manager",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["mapping.decorator",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["matching",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mesquita",{"_index":330,"title":{},"body":{"properties.html":{}}}],["metadata",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["miscellaneous",{"_index":264,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["mudanças",{"_index":296,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["módulo",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":131,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["nestjs",{"_index":280,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators/http/request",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["nestjs/common/decorators/http/route",{"_index":152,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["nestjs/config",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["npm",{"_index":238,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["number",{"_index":119,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["o",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["oauth20",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtenção",{"_index":273,"title":{},"body":{"index.html":{}}}],["obter",{"_index":122,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["optional",{"_index":133,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["os",{"_index":123,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":322,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":210,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["param",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["params.decorator",{"_index":153,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["parseint(process.env.mysql_port,3306",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pela",{"_index":287,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":157,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["permitir",{"_index":282,"title":{},"body":{"index.html":{}}}],["port",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["primário",{"_index":136,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["private",{"_index":159,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["process.env.debug",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.insecure_auth",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_database",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_host",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_password",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_username",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{}}}],["properties",{"_index":325,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":315,"title":{},"body":{"index.html":{}}}],["que",{"_index":294,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsolidadoController.html":{}}}],["redis",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":271,"title":{},"body":{"index.html":{}}}],["result",{"_index":163,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["results",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["returna",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["rimraf",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["rodar",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":301,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["saldos",{"_index":124,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["se",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["secret",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["segurança",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":184,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["sempre",{"_index":293,"title":{},"body":{"index.html":{}}}],["ser",{"_index":291,"title":{},"body":{"index.html":{}}}],["service",{"_index":160,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["serviço",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["signoptions",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["simples",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["sistema",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["slugify",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":297,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["sql",{"_index":183,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["src/.../main.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:26",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:14",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/typeorm.config.ts",{"_index":200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/consolidado.controller.ts",{"_index":112,"title":{},"body":{"controllers/ConsolidadoController.html":{},"coverage.html":{}}}],["src/consolidado.controller.ts:31",{"_index":121,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["src/consolidado.controller.ts:43",{"_index":139,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["src/consolidado.controller.ts:55",{"_index":144,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["src/consolidado.service.ts",{"_index":170,"title":{},"body":{"injectables/ConsolidadoService.html":{},"coverage.html":{}}}],["src/consolidado.service.ts:26",{"_index":175,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["src/consolidado.service.ts:43",{"_index":178,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["src/consolidado.service.ts:62",{"_index":179,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["src/consolidado.service.ts:8",{"_index":173,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["src/main.ts",{"_index":205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start:devlicença",{"_index":309,"title":{},"body":{"index.html":{}}}],["started",{"_index":269,"title":{"index.html":{}},"body":{}}],["statements",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":174,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["sum(num_value",{"_index":187,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["support",{"_index":319,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":320,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["tb_accounting_entry",{"_index":189,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["tecnologia",{"_index":275,"title":{},"body":{"index.html":{}}}],["this.appservice.gethealth",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["this.datasource.query(sql",{"_index":192,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["this.service.getaccountbalance(accountid.tostring",{"_index":165,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["this.service.getaccountbalancetoday(accountid.tostring",{"_index":167,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["this.service.getuseraccountsbalance(userid.tostring",{"_index":169,"title":{},"body":{"controllers/ConsolidadoController.html":{}}}],["tipolancamento",{"_index":186,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["token",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":132,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":180,"title":{},"body":{"injectables/ConsolidadoService.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/bcrypt",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":278,"title":{},"body":{"index.html":{}}}],["ui",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":147,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{},"index.html":{}}}],["uma",{"_index":128,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["unknown",{"_index":177,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["updates",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["usar",{"_index":299,"title":{},"body":{"index.html":{}}}],["userid",{"_index":149,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["username",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilizador",{"_index":148,"title":{},"body":{"controllers/ConsolidadoController.html":{},"injectables/ConsolidadoService.html":{}}}],["validar",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["validator",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["valor",{"_index":188,"title":{},"body":{"injectables/ConsolidadoService.html":{}}}],["value",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":331,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdade",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["verdadeiro",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["version",{"_index":326,"title":{},"body":{"properties.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                Controlador básico do sistema\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        Returna VERDADE se a API estiver a rodar\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Verdadeiro, se estiver a funcionar correctamente\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Get } from '@nestjs/common/decorators/http/request-mapping.decorator';\n\n/**\n * Controlador básico do sistema\n */\n@ApiTags('Health')\n@Controller('health')\nexport class AppController {\n  \n  /**\n   * Constructor do Serviço / Injeção de Dependência\n   * \n   * @param {AppService} appService serviço básico do sistema\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returna VERDADE se a API estiver a rodar\n   *\n   * @returns Verdadeiro, se estiver a funcionar correctamente\n   */\n  @Get()\n  async getHealth(): Promise {\n    return this.appService.getHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConsolidadoService\n\nConsolidadoService\n\nAppModule -->\n\nConsolidadoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Módulo central de carga do sistema\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ConsolidadoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            ConsolidadoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { jwtConstants, typeOrmConfig } from './config/typeorm.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConsolidadoController } from './consolidado.controller';\nimport { ConsolidadoService } from './consolidado.service';\n\n/**\n * Módulo central de carga do sistema\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, cache: true }),\n    TypeOrmModule.forRoot(typeOrmConfig),    \n    JwtModule.register({      \n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '3600s' },\n    })\n  ],\n  controllers: [AppController, ConsolidadoController],\n  providers: [AppService, ConsolidadoService],\n})\nexport class AppModule{\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço básico da API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHealth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Função simples para validar o funcionamento da API\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Verdadeiro, se estiver a funcionar correctamente\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Serviço básico da API\n */\n@Injectable()\nexport class AppService {\n\n  /**\n   * Função simples para validar o funcionamento da API\n   * \n   * @returns {boolean} Verdadeiro, se estiver a funcionar correctamente\n   */\n  async getHealth(): Promise {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConsolidadoController.html":{"url":"controllers/ConsolidadoController.html","title":"controller - ConsolidadoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConsolidadoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/consolidado.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                consolidated\n            \n\n\n            \n                Description\n            \n            \n                Controlador de Consolidado\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAccountBalance\n                            \n                            \n                                    \n                                    Async\n                                getAccountBalanceToday\n                            \n                            \n                                    \n                                    Async\n                                getUserAccountsBalance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAccountBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountBalance(accountId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getAccountBalance/:accountId')\n                \n            \n\n                    \n                        \n                            Defined in src/consolidado.controller.ts:31\n                        \n                    \n\n\n            \n                \n                        Obter os saldos de credito e debito de uma conta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accountId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador Primário da Conta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAccountBalanceToday\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountBalanceToday(accountId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getAccountBalanceToday/:accountId')\n                \n            \n\n                    \n                        \n                            Defined in src/consolidado.controller.ts:43\n                        \n                    \n\n\n            \n                \n                        Obter os saldos de credito e debito de uma conta até a data atual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accountId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador Primário da Conta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserAccountsBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAccountsBalance(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getUserAccountsBalance/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/consolidado.controller.ts:55\n                        \n                    \n\n\n            \n                \n                        Obter os saldos de credito e debito das contas de um utilizador\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador Primário do Utilizador\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiBearerAuth, ApiExtraModels, ApiTags } from '@nestjs/swagger';\nimport { Get } from '@nestjs/common/decorators/http/request-mapping.decorator';\nimport { Param } from '@nestjs/common/decorators/http/route-params.decorator';\nimport { ConsolidadoService } from './consolidado.service';\n\n/**\n * Controlador de Consolidado\n */\n@ApiTags('Consolidated')\n@ApiBearerAuth()\n@Controller('consolidated')\nexport class ConsolidadoController {\n\n  /**\n   * Injeção de Dependencia pelo constructor\n   * \n   * @param {ConsolidadoService} Serviço de Consolidação\n   */\n  constructor(\n    private readonly service: ConsolidadoService\n  ) { }\n \n  /**\n   * Obter os saldos de credito e debito de uma conta\n   * \n   * @param accountId Identificador Primário da Conta\n   * @returns \n   */\n  @Get('getAccountBalance/:accountId')\n  async getAccountBalance(@Param('accountId') accountId: number): Promise {\n    const result = await this.service.getAccountBalance(accountId.toString());\n    return result;\n  }\n\n  /**\n   * Obter os saldos de credito e debito de uma conta até a data atual\n   * \n   * @param accountId Identificador Primário da Conta\n   * @returns \n   */\n  @Get('getAccountBalanceToday/:accountId')\n  async getAccountBalanceToday(@Param('accountId') accountId: number): Promise {\n    const result = await this.service.getAccountBalanceToday(accountId.toString());\n    return result;\n  }  \n\n  /**\n   * Obter os saldos de credito e debito das contas de um utilizador\n   * \n   * @param userId Identificador Primário do Utilizador\n   * @returns \n   */\n  @Get('getUserAccountsBalance/:userId')\n  async getUserAccountsBalance(@Param('userId') userId: number): Promise {\n    const result = await this.service.getUserAccountsBalance(userId.toString());\n    return result;\n  }\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsolidadoService.html":{"url":"injectables/ConsolidadoService.html","title":"injectable - ConsolidadoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsolidadoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/consolidado.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço do Consolidado\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccountBalance\n                            \n                            \n                                    Async\n                                getAccountBalanceToday\n                            \n                            \n                                    Async\n                                getUserAccountsBalance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/consolidado.service.ts:8\n                            \n                        \n\n                \n                    \n                            Injeção de Dependencia pelo constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAccountBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountBalance(accountId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/consolidado.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Obter os saldos em Credito e Debito de uma conta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAccountBalanceToday\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountBalanceToday(accountId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/consolidado.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Obter os saldos em Credito e Debito de uma conta até a data atual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserAccountsBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAccountsBalance(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/consolidado.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Obter os saldos em Credito e Debito das contas de um utilizador\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DataSource } from 'typeorm';\n\n/**\n * Serviço do Consolidado\n **/\n@Injectable()\nexport class ConsolidadoService {\n\n   /**\n    * Injeção de Dependencia pelo constructor\n    * \n    * @param {DataSource} datasource Acesso a Dados\n    */  \n  constructor(    \n    private dataSource: DataSource    \n    ) {\n  }\n\n  /**\n   * Obter os saldos em Credito e Debito de uma conta\n   * \n   * @param accountId \n   * @returns \n   */\n  async getAccountBalance(accountId: string) {\n    let sql = ' SELECT \\\n                  COD_ENTRY_TYPE as tipoLancamento, \\\n                  SUM(NUM_VALUE) as valor \\\n                FROM  TB_ACCOUNTING_ENTRY \\\n                WHERE COD_ACCOUNT_ID = ' + accountId + ' \\\n                GROUP BY COD_ENTRY_TYPE ';\n\n    return this.dataSource.query(sql);\n  }\n\n  /**\n   * Obter os saldos em Credito e Debito de uma conta até a data atual\n   * \n   * @param accountId \n   * @returns \n   */\n  async getAccountBalanceToday(accountId: string) {\n    let sql = ' SELECT \\\n                  COD_ENTRY_TYPE as tipoLancamento, \\\n                  SUM(NUM_VALUE) as valor \\\n                FROM  TB_ACCOUNTING_ENTRY \\\n                WHERE COD_ACCOUNT_ID = ' + accountId + ' \\\n                AND DAT_DATE \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/consolidado.controller.ts\n            \n            controller\n            ConsolidadoController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/consolidado.service.ts\n            \n            injectable\n            ConsolidadoService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.1.2\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.1.2\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.1.2\n        \n            @nestjs/swagger : ^7.1.2\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            bcrypt : ^5.1.1\n        \n            cache-manager-redis-store : ^1.5.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            dotenv : ^8.2.0\n        \n            lodash : ^4.17.15\n        \n            mysql2 : ^3.5.1\n        \n            npm-check-updates : ^16.10.16\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^7.8.1\n        \n            slugify : ^1.6.6\n        \n            swagger-ui-express : ^4.1.2\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Função de início do serviço\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI-CONSOLIDADO\nDefinição\nA API-CONSOLIDADO é um serviço REST API destinado a obtenção do consolidado das finanças.\nTecnologia\nFoi concebido em Typescript com NestJs de forma a permitir escalar.\nDocumentação\nA documentação do código é gerada pela biblioteca compodoc e deve ser executada sempre que houver mudanças no software.\nPara executar, usar:\nExample :   > npm run compodocConfiguração\nExample :   > cd api-consolidado\n\n   > npm install\n\n   > copy .env.sample .env  Execução\nExample :   > npm run start:devLicença\nEste software é gratuito e de código livre, GNU GENERAL PUBLIC LICENSE 3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConsolidadoService\n\nConsolidadoService\n\nAppModule -->\n\nConsolidadoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.\n        \n            Description : API do Consolidado\n        \n            License : GNU\n        \n            Author : Andre Mesquita \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../typeorm.config.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret : process.env.JWT_SECRET,\n}\n                    \n                \n\n            \n                \n                    Constante de segurança do token JWT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOrmConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.MYSQL_HOST,\n  port: parseInt(process.env.MYSQL_PORT,3306),\n  username: process.env.MYSQL_USERNAME, \n  password: process.env.MYSQL_PASSWORD,\n  database: process.env.MYSQL_DATABASE,\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  synchronize: false,\n  debug: process.env.DEBUG == 'true' ? true : false,\n  insecureAuth: process.env.INSECURE_AUTH == 'true' ? true : false,\n}\n                    \n                \n\n            \n                \n                    Constante de configuração do acesso a banco de dados\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
